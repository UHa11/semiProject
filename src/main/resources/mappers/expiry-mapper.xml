<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kh.project.cse.boot.mappers.ExpiryMapper">
    <resultMap id="ExpiryResult" type="Expiry">
        <result column="PRODUCT_NO" property="productNo"/>
        <result column="CATEGORY_NAME" property="categoryName"/>
        <result column="PRODUCT_NAME" property="productName"/>
        <result column="EXPIRATION_DATE" property="expirationDate"/>
        <result column="INVENTORY_COUNT" property="inventoryCount"/>
        <result column="PRICE" property="price"/>
        <result column="NEAR_EXPIRY" property="nearExpiry"/>
    </resultMap>

    <select id="selectExpiryCount" resultType="_int">
        SELECT COUNT(*) FROM INVENTORY
        WHERE INVENTORY_COUNT > 0
        AND STORE_NO =#{storeNo}
    </select>
    <select id="selectExpiryList" resultMap="ExpiryResult">
        SELECT
        P.PRODUCT_NO,
        C.CATEGORY_NAME,
        P.PRODUCT_NAME,
        TO_CHAR(I.EXPIRATION_DATE, 'YYYY-MM-DD') AS EXPIRATION_DATE,
        I.INVENTORY_COUNT,
        TO_CHAR(P.INPUT_PRICE*I.INVENTORY_COUNT, 'L999,999,999') AS PRICE,
        CASE
        WHEN TRUNC(I.EXPIRATION_DATE +1) &lt;= TRUNC(SYSDATE) THEN 1
        WHEN TRUNC(I.EXPIRATION_DATE +2) = TRUNC(SYSDATE) THEN 2
        ELSE 0
        END AS NEAR_EXPIRY
        FROM PRODUCT P
        JOIN INVENTORY I ON P.PRODUCT_NO = I.PRODUCT_NO
        JOIN CATEGORY C ON P.CATEGORY_NO = C.CATEGORY_NO
        WHERE I.INVENTORY_COUNT > 0
        AND I.STORE_NO =#{storeNo}
        ORDER BY I.EXPIRATION_DATE
    </select>
    <select id="searchExpiryListCount" resultType="_int">
        SELECT COUNT(*) FROM PRODUCT
        JOIN INVENTORY USING(PRODUCT_NO)
        JOIN CATEGORY USING(CATEGORY_NO)
        WHERE INVENTORY_COUNT > 0
        AND STORE_NO = #{storeNo}
        <choose>
            <when test="searchExpiry == 'productNo'">
                AND PRODUCT_NO LIKE '%'|| #{keyword} ||'%'
            </when>
            <when test="searchExpiry == 'categoryName'">
                AND CATEGORY_NAME LIKE '%'|| #{keyword} ||'%'
            </when>
            <otherwise>
                AND PRODUCT_NAME LIKE '%'|| #{keyword} ||'%'
            </otherwise>
        </choose>
    </select>
    <select id="searchExpiryList" resultMap="ExpiryResult">
        SELECT
        P.PRODUCT_NO,
        C.CATEGORY_NAME,
        P.PRODUCT_NAME,
        TO_CHAR(I.EXPIRATION_DATE, 'YYYY-MM-DD') AS EXPIRATION_DATE,
        I.INVENTORY_COUNT,
        TO_CHAR(P.INPUT_PRICE*I.INVENTORY_COUNT, 'L999,999,999') AS PRICE,
        CASE
        WHEN TRUNC(I.EXPIRATION_DATE +1) &lt;= TRUNC(SYSDATE) THEN 1
        WHEN TRUNC(I.EXPIRATION_DATE +2) = TRUNC(SYSDATE) THEN 2
        ELSE 0
        END AS NEAR_EXPIRY
        FROM PRODUCT P
        JOIN INVENTORY I ON P.PRODUCT_NO = I.PRODUCT_NO
        JOIN CATEGORY C ON P.CATEGORY_NO = C.CATEGORY_NO
        WHERE I.INVENTORY_COUNT > 0
        AND I.STORE_NO = #{storeNo}
        <choose>
            <when test="searchExpiry == 'productNo'">
                AND P.PRODUCT_NO LIKE '%'|| #{keyword} ||'%'
            </when>
            <when test="searchExpiry == 'categoryName'">
                AND C.CATEGORY_NAME LIKE '%'|| #{keyword} ||'%'
            </when>
            <otherwise>
                AND P.PRODUCT_NAME LIKE '%'|| #{keyword} ||'%'
            </otherwise>
        </choose>
        ORDER BY I.EXPIRATION_DATE
    </select>
    <insert id="insertExpiry">
        INSERT INTO CIRCULATION (
            CIRCULATION_NO,
            STORE_NO,
            PRODUCT_NO,
            INPUT_PRICE,
            SALE_PRICE,
            CIRCULATION_AMOUNT,
            CIRCULATION_DATE,
            STATUS
        )
        SELECT
        SEQ_CIR.NEXTVAL,
        #{storeNo},
        #{productNo},
        INPUT_PRICE,
        SALE_PRICE,
        #{inventoryCount},
        SYSDATE,
        4
        FROM PRODUCT
        WHERE PRODUCT_NO = #{productNo}
    </insert>
    <delete id="deleteExpiry">
        DELETE FROM INVENTORY
        WHERE STORE_NO = #{storeNo}
        AND PRODUCT_NO = #{productNo}
        AND TO_CHAR(EXPIRATION_DATE, 'YYYY-MM-DD') = #{expirationDate}
    </delete>
</mapper>